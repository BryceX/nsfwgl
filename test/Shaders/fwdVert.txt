#version 410

layout(location = 0)in vec4 Position;
layout(location = 1)in vec4 Normal;
layout(location = 2)in vec4 Tangent;
layout(location = 3)in vec2 TexCoord;

out vec2 vTexCoord;	// v ... for VERTEX! (not vendetta)
out vec4 vNormal;
out vec3 vTangent;
out vec3 vBiTangent;
out vec4 vShadowCoord;

uniform mat4 Projection;	// camera's projection matrix (how the world is percieved)
uniform mat4 View;			// camera's view matrix (where it's looking at)
uniform mat4 Model;			// model matrix -- this is your transform

uniform mat4 LightMatrix;

void main()
{

	vTexCoord   = TexCoord;
	vNormal     = View * Model * Normal;
	vTangent = Tangent.xyz;
	vBiTangent = cross(vNormal.xyz, vTangent).xyz;
    
	// transformed into shadow space!
	vShadowCoord = LightMatrix * Model * Position;
	
	gl_Position = Projection * View * Model * Position;
}

/*
	Projection : Converts from Camera Space to Clip Space
	View	   : Converts from World Space to Camera Space
	Model	   : Converts from Model Space to World Space
	Position   : Of a Vertex
*/